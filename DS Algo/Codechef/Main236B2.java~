import java.util.*;
import java.io.*;
//267630EY
public class Main236B2
{
  static PrintWriter out=new PrintWriter(System.out);
  static boolean marked[];
  static int divisors[];
  static void sieve()
  {
    int n=1000000;
    marked=new boolean[n+1];
    Arrays.fill(marked,true);
    marked[0]=false;
    marked[1]=false;
    divisors[1]=1;
    
      
    divisors=new int[n+1];
    int m=(int)Math.sqrt(n);
    for(int i=2;i<=n;i++)
    {
      if(prime[i])
      {
        for(int j=i;j<=n;j+=i)
        {
          marked[j]=false;
          divisors[j]++;
        }
      }
    }
  }
                       
  
  
  public static void main(String[] args) throws IOException
  {
    Scanner sc=new Scanner(System.in);
    sieve();
    int a=sc.nextInt();
    int b=sc.nextInt();
    int c=sc.nextInt();
    long ans=0;
    long f=1073741824;
    for(int i=1;i<=a;i++)
    {
      for(int j=1;j<=b;j++)
      {
        for(int k=1;k<=c;k++)
        {
          ans=(ans+divisors[i*j*k])%f;
        }
      }
    }
    out.println(ans);
    out.flush();
          
    
    
      
    
            
      
      
                
    
  }
  
  static class Scanner
  {
    BufferedReader br;
    StringTokenizer tk=new StringTokenizer("");
    public Scanner(InputStream is) 
        {
      br=new BufferedReader(new InputStreamReader(is));
    }
        public int nextInt() throws IOException
        {
          if(tk.hasMoreTokens())
                return Integer.parseInt(tk.nextToken());
          tk=new StringTokenizer(br.readLine());
          return nextInt();
        }
        public long nextLong() throws IOException
        {
            if(tk.hasMoreTokens())
              return Long.parseLong(tk.nextToken());
            tk=new StringTokenizer(br.readLine());
            return nextLong();
        }
        public String next() throws IOException
        {
          if(tk.hasMoreTokens())
            return (tk.nextToken());
            tk=new StringTokenizer(br.readLine());
            return next();
        }
        public String nextLine() throws IOException
        {
          tk=new StringTokenizer("");
          return br.readLine();
        }
        public double nextDouble() throws IOException
        {
            if(tk.hasMoreTokens())
              return Double.parseDouble(tk.nextToken());
            tk=new StringTokenizer(br.readLine());
            return nextDouble();
        }
        public char nextChar() throws IOException
        {
            if(tk.hasMoreTokens())
              return (tk.nextToken().charAt(0));
            tk=new StringTokenizer(br.readLine());
            return nextChar();
        }
        public int[] nextIntArray(int n) throws IOException
        {
            int a[]=new int[n];
            for(int i=0;i<n;i++)
              a[i]=nextInt();
            return a;
        }
        public long[] nextLongArray(int n) throws IOException
        {
          long a[]=new long[n];
            for(int i=0;i<n;i++)
              a[i]=nextLong();
            return a;
        }
        public int[] nextIntArrayOneBased(int n) throws IOException
        {
          int a[]=new int[n+1];
            for(int i=1;i<=n;i++)
              a[i]=nextInt();
            return a;
        }
        public long[] nextLongArrayOneBased(int n) throws IOException
        {
          long a[]=new long[n+1];
          for(int i=1;i<=n;i++)
                a[i]=nextLong();
          return a;
        }
  }
}

