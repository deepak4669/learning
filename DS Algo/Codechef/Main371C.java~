import java.util.*;
import java.io.*;
//267630EY
public class Main371C
{
  static PrintWriter out=new PrintWriter(System.out);
  
  
  public static void main(String[] args) throws IOException
  {
    Scanner sc=new Scanner(System.in);
    String s=sc.next();
    int nb=sc.nextInt();
    int ns=sc.nextInt();
    int nc=sc.nextInt();
    int pb=sc.nextInt();
    int ps=sc.nextInt();
    int pc=sc.nextInt();
    long r=sc.nextInt();
    long cnt=0;
    int rb=0;
    int rs=0;
    int rc=0;
    for(int i=0;i<s.length();i++)
    {
      if(s.charAt(i)=='B')
        rb++;
      else if(s.charAt(i)='S')
        rs++;
      else 
        rc++;
    }
    int min=Math.min(nb/rb,Math.min(ns/rs,nc/rc));
    cnt+=min;
    nb-=(rb*min);
    ns-=(rs*min);
    nc-=(rc*min);
    
    while(r>0)
    {
      int price=0;
      if(rb>=nb)
      {
        price+=(rb-nb)*pb;
        nb=0;
      }
      else
      {
        nb-=rb;
      }
      if(rs>=ns)
      {
        price+=(rs-ns)*ps;
        ns=0;
      }
      else
        ns-=rs;
      if(rc>=nc)
      {
        price+=(rc-nc)*pc;
        nc=0;
      }
      else
        nc-=rc;
      
      if(price>r)
        break;
      else
      {
        r-=price;
        cnt++;
      }
    }
    out.println(cnt);
    out.flush();
        
        
      
        
        
    
    
  }
  static class Scanner
  {
    BufferedReader br;
    StringTokenizer tk=new StringTokenizer("");
    public Scanner(InputStream is) 
        {
      br=new BufferedReader(new InputStreamReader(is));
    }
        public int nextInt() throws IOException
        {
          if(tk.hasMoreTokens())
                return Integer.parseInt(tk.nextToken());
          tk=new StringTokenizer(br.readLine());
          return nextInt();
        }
        public long nextLong() throws IOException
        {
            if(tk.hasMoreTokens())
              return Long.parseLong(tk.nextToken());
            tk=new StringTokenizer(br.readLine());
            return nextLong();
        }
        public String next() throws IOException
        {
          if(tk.hasMoreTokens())
            return (tk.nextToken());
            tk=new StringTokenizer(br.readLine());
            return next();
        }
        public String nextLine() throws IOException
        {
          tk=new StringTokenizer("");
          return br.readLine();
        }
        public double nextDouble() throws IOException
        {
            if(tk.hasMoreTokens())
              return Double.parseDouble(tk.nextToken());
            tk=new StringTokenizer(br.readLine());
            return nextDouble();
        }
        public char nextChar() throws IOException
        {
            if(tk.hasMoreTokens())
              return (tk.nextToken().charAt(0));
            tk=new StringTokenizer(br.readLine());
            return nextChar();
        }
        public int[] nextIntArray(int n) throws IOException
        {
            int a[]=new int[n];
            for(int i=0;i<n;i++)
              a[i]=nextInt();
            return a;
        }
        public long[] nextLongArray(int n) throws IOException
        {
          long a[]=new long[n];
            for(int i=0;i<n;i++)
              a[i]=nextLong();
            return a;
        }
        public int[] nextIntArrayOneBased(int n) throws IOException
        {
          int a[]=new int[n+1];
            for(int i=1;i<=n;i++)
              a[i]=nextInt();
            return a;
        }
        public long[] nextLongArrayOneBased(int n) throws IOException
        {
          long a[]=new long[n+1];
          for(int i=1;i<=n;i++)
                a[i]=nextLong();
          return a;
        }
  }
}

