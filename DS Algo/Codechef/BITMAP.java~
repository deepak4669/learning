import java.util.Scanner;
import java.util.Arrays;
public class BITMAP
{
  static double[][] res;
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    int t=sc.nextInt();
    while(t-->0)
    {
      int n=sc.nextInt();
      int m=sc.nextInt();
      String[] s=new String[n];
      for(int i=0;i<n;i++)
        s[i]=sc.next();
      res=new double[n][m];
      
      for(int i=0;i<n;i++)
      {
        for(int j=0;j<m;j++)
        {
          System.out.print(solve(i,j,s,n,m,0)+" ");
        }
        System.out.println();
      }
    }
  }
  public static double solve(int i,int j,String[] s,int n, int m,int orientation)
  {
    
    if(i<0||i>=n||j<0||j>=m) return Double.POSITIVE_INFINITY;
    if(res[i][j]!=0.0) return res[i][j];
    else if(s[i].charAt(j)=='1'){      
      return 0;
    }
    else
    {
      double ans=Double.POSITIVE_INFINITY;
      if(orientation==0){
      double ans1=min(solve(i,j+1,s,n,m,1),solve(i-1,j,s,n,m,4))+1;
      double ans2=min(solve(i+1,j,s,n,m,2),solve(i,j-1,s,n,m,3))+1;
      ans=min(ans1,ans2);
      }
      else if(orientation==1){
        ans=min(solve(i,j+1,s,n,m,1),min(solve(i-1,j,s,n,m,4),solve(i+1,j,s,n,m,2)))+1;
      }
      else if(orientation==2){
        ans=min(solve(i,j+1,s,n,m,1),min(solve(i+1,j,s,n,m,2),solve(i,j-1,s,n,m,3)))+1;
      }
      else if(orientation==3){
        ans=min(solve(i,j-1,s,n,m,3),min(solve(i+1,j,s,n,m,2),solve(i-1,j,s,n,m,4)))+1;
      }
      else if(orientation==4){
        ans=min(solve(i-1,j,s,n,m,4),min(solve(i,j-1,s,n,m,3),solve(i,j+1,s,n,m,1)))+1;
      }
      
      res[i][j]=ans;
      return ans;
    }
  }
  public static double min(double x,double y)
  {
    return x>y?y:x;
  }
  
}
      
        
                
            
            
        